@use "./includes/reset";
@use "./includes/mixins" as m;
@use "./includes/values" as v;
@use "common";
@use "themes";
@use "components/header";
@use "components/content";
@use "components/form";
@use "components/footer";

body {
	@include m.font(main, 88%);

	background-attachment: fixed;
	background-color:      var(--body-bg);
	background-image:      var(--body-bg-img);
	background-position:   center;
	background-repeat:     no-repeat;
	background-size:       cover;
	color:                 var(--body-text);
}

#root {
	display:            grid;

	// Default grid format
	grid-template-areas:
		"header"
		"content"
		"footer";
	grid-template-rows: auto 1fr auto;

	min-width:          375px;
	width:              100vw;
	height:             100vh;
	overflow:           hidden;

	&:not(:has(> .home)) {
		grid-template-rows: map-get(v.$sizes, page-header) 1fr map-get(v.$sizes, page-footer);
	}

	// Only show this grid template if on a desktop resolution on the home page.
	@include m.res(desktop) {
		&:has(> .home) {
			grid-template-areas:
				"header content"
				"footer footer";
			grid-template-columns: 1fr 1fr;
			grid-template-rows:    1fr auto;
		}
	}

	&:not(:has(> .home)) { height: 100vh; }
}
