@use "../includes/mixins" as m;
@use "../includes/values" as v;
@use "../includes/icons";

.languages,
.themes { gap: map-get(v.$sizes, "medium"); }

.languages__flag {
	width:  map-get(v.$sizes, "medium-large");
	height: .75 * map-get(v.$sizes, "medium-large");
}

.languages__flag,
.themes__icon {
	@include m.hovergrow(1.5);

	cursor:      pointer;
	line-height: 1rem;
}

.languages__flag {
	cursor: pointer;

	&--de { @include m.flag('de'); }
	&--en { @include m.flag('us'); }
	&--es { @include m.flag('es'); }
	&--fr { @include m.flag('fr'); }
}

.themes__icon {
	//@include m.font(icons, "medium");
	color: var(--icon);

	&--dark_mode:hover  { &, &.selected { color: var(--theme-dark-hover); } }
	&--nature:hover     { &, &.selected { color: var(--theme-nature-hover); } }
	&--light_mode:hover { &, &.selected { color: var(--theme-light-hover); } }
}

.page-header {
	@include m.flex($justify: space-between, $align: center);

	grid-area: header;
	gap:       map-get(v.$sizes, "medium");

	&__settings {
		@include m.flex();

		gap: map-get(v.$sizes, "medium");
	}

	&__title {
		@include m.font(title, title);
		@include m.shadow(text, medium);

		color: var(--header-title);
	}

	&:has(+ .home) {
		@include m.flex(column, $justify: center);

		.page-header__title { @include m.font(title, title-intro); }

		.page-header__settings { @include m.flex(column, nowrap, center, center); }

		.languages,
		.themes {
			@include m.flex(row, wrap, center);

			text-align: center;

			&__header { width: 100%; }

			&__icon { font-size: map-get(v.$font-sizes, "medium-large"); }
		}
	}

	&:not(:has(+ .home)) {
		.languages,
		.themes {
			@include m.flex(column, $align: center);

			&__header { display: none; }
		}
	}
}
